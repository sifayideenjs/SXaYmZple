<UserControl x:Class="Quotation.MotorInsuranceModule.Views.CreateWizards.AddQuotationDetail"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Quotation.MotorInsuranceModule.Views.CreateWizards"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:prismlib="http://prismlibrary.com/"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:infConstants="clr-namespace:Quotation.Infrastructure.Constants;assembly=Quotation.Infrastructure"
             xmlns:infBehaviors="clr-namespace:Quotation.Infrastructure.Behaviors;assembly=Quotation.Infrastructure"
             xmlns:infConverters="clr-namespace:Quotation.Infrastructure.Converters;assembly=Quotation.Infrastructure"
             xmlns:control="clr-namespace:Quotation.Styling.Controls;assembly=Quotation.Styling"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1000" DataContext="{Binding}">
    <UserControl.Resources>
        <infConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <infConverters:YesNoToBooleanConverter x:Key="YesNoToBooleanConverter"/>
        <infConverters:YesNoToByteConverter x:Key="YesNoToByteConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ScrollViewer HorizontalScrollBarVisibility="Auto" DataContext="{Binding QuotationViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.ColumnSpan="2" FontSize="20" FontFamily="{DynamicResource HeaderFontFamily}" Foreground="LightGray">Named Driver Details</Label>

                    <DataGrid Grid.Row="1" MinHeight="100" ItemsSource="{Binding DriverDetails}" SelectedItem="{Binding SelectedDriverDetail}" AutoGenerateColumns="False" Style="{StaticResource AzureDataGrid}" metro:DataGridHelper.EnableCellEditAssist="False" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Insured Name" Binding="{Binding InsuredName}" Width="200"/>
                            <DataGridTextColumn Header="Insured NRIC" Binding="{Binding InsuredNRIC}" Width="100"/>
                            <DataGridTextColumn Header="Biz Reg No" Binding="{Binding BizRegNo}" Width="100"/>
                            <DataGridTemplateColumn Header="Date of Birth" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker VerticalContentAlignment="Center" SelectedDate="{Binding DateOfBirth, Mode=TwoWay}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Gender" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding GenderTypes}" SelectedItem="{Binding Gender, Mode=TwoWay}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Marital Status" Width="120">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding MaritalStatusTypes}" SelectedItem="{Binding MaritalStatus, Mode=TwoWay, Converter={StaticResource YesNoToBooleanConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Occupation" Binding="{Binding Occupation}" Width="200"/>
                            <DataGridTextColumn Header="Industry" Binding="{Binding Industry}" Width="200"/>
                            <DataGridTemplateColumn Header="License Date" Width="150">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker VerticalContentAlignment="Center" SelectedDate="{Binding LicenseDate, Mode=TwoWay}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="10" Grid.Column="3" Orientation="Vertical" HorizontalAlignment="Center" Margin="0 0 10 10">
                        <Button Grid.Column="1" Height="40" Width="40" Command="{Binding AddDriverCommand}" Style="{StaticResource MetroCircleButtonStyle}">
                            <Rectangle Width="15" Height="15" Fill="WhiteSmoke">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_add}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button Grid.Column="1" Height="40" Width="40" Command="{Binding DeleteDriverCommand}" Style="{StaticResource MetroCircleButtonStyle}">
                            <Rectangle Width="15" Height="15" Fill="WhiteSmoke">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_delete}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" Margin="0 10 0 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Margin="0" Grid.Row="0" 
                       FontSize="20"
                       FontFamily="{DynamicResource HeaderFontFamily}"
                       Foreground="LightGray"
                       >Vehicle Details</Label>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition MinWidth="300" Width="350"/>
                            <ColumnDefinition MinWidth="100" Width="120"/>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition MinWidth="300" Width="350"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Make:</Label>
                        <TextBox Grid.Row="0" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.Make, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                             Margin="5"/>

                        <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Model:</Label>
                        <TextBox Grid.Row="1" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.VehicleModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                             Margin="5"/>

                        <Label Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Capacity / Tonnage:</Label>
                        <TextBox Grid.Row="2" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.Capacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                             Margin="5"/>

                        <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Date of Reg:</Label>
                        <DatePicker Grid.Row="3" Grid.Column="1" VerticalContentAlignment="Center" SelectedDate="{Binding VehicleDetail.DateOfRegistered, Mode=TwoWay, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                             Margin="5"/>

                        <Label Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Year Made:</Label>
                        <TextBox Grid.Row="4" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.YearMade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                             Margin="5"/>

                        <Label Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Reg No Plate:</Label>
                        <TextBox Grid.Row="5" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.RegNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}"
                             Margin="5"/>

                        <Label Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Parallel Import:</Label>
                        <ComboBox Grid.Row="6" Grid.Column="1" ItemsSource="{Binding VehicleDetail.YesNos}" SelectedItem="{Binding VehicleDetail.ParallelImport, Mode=TwoWay, Converter={StaticResource YesNoToByteConverter}}" SelectedIndex="0" Margin="5" />

                        <Label Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Off Peak Vehicle:</Label>
                        <ComboBox Grid.Row="0" Grid.Column="4" ItemsSource="{Binding VehicleDetail.YesNos}" SelectedItem="{Binding VehicleDetail.OffPeakVehicle, Mode=TwoWay, Converter={StaticResource YesNoToByteConverter}}" SelectedIndex="0" Margin="5" />

                        <Label Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">NCD (%):</Label>
                        <TextBox Grid.Row="1" Grid.Column="4" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.NCD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Existing Insurer:</Label>
                        <TextBox Grid.Row="2" Grid.Column="4" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.ExistingInsurer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="3" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Previous Reg No:</Label>
                        <TextBox Grid.Row="3" Grid.Column="4" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding VehicleDetail.PreviousRegNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="4" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Claims (Past 3 years):</Label>
                        <TextBox Grid.Row="4" Grid.Column="4" Grid.RowSpan="3" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Top" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding VehicleDetail.Claims, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>
                    </Grid>
                </Grid>

                <Grid Grid.Row="2" Margin="0 10 0 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Margin="0" Grid.Row="0" FontSize="20" FontFamily="{DynamicResource HeaderFontFamily}" Foreground="LightGray">Insurance Details</Label>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition MinWidth="300" Width="350"/>
                            <ColumnDefinition MinWidth="100" Width="120"/>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition MinWidth="300" Width="350"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Insurance Expiry Date:</Label>
                        <DatePicker Grid.Row="0" Grid.Column="1" VerticalContentAlignment="Center" SelectedDate="{Binding CurrentInsuranceDetail.InsuranceExpiryDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Road Tax Expiry Date:</Label>
                        <DatePicker Grid.Row="1" Grid.Column="1" VerticalContentAlignment="Center" SelectedDate="{Binding CurrentInsuranceDetail.RoadTaxExpiryDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Previous Dealer:</Label>
                        <TextBox Grid.Row="2" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding CurrentInsuranceDetail.PreviousDealer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Agency:</Label>
                        <TextBox Grid.Row="3" Grid.Column="1" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding CurrentInsuranceDetail.Agency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Finance Bank:</Label>
                        <TextBox Grid.Row="0" Grid.Column="4" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Center" Text="{Binding CurrentInsuranceDetail.FinanceBank, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>

                        <Label Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Foreground="LightGray" FontSize="14">Previous Year Premium:</Label>
                        <TextBox Grid.Row="1" Grid.Column="4" Grid.RowSpan="3" metro:TextBoxHelper.ClearTextButton="True" VerticalContentAlignment="Top" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding CurrentInsuranceDetail.PrevYearPremium, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true, NotifyOnValidationError=true, ValidatesOnDataErrors=True}" Margin="5"/>
                    </Grid>
                </Grid>
            </Grid>
        </ScrollViewer>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
            <Button Grid.Column="1" Height="50" Width="50" Command="{Binding PreviousCommand}" Style="{StaticResource MetroCircleButtonStyle}">
                <Rectangle Width="25" Height="25" Fill="WhiteSmoke">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_arrow_left}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
            <Button Grid.Column="1" Height="50" Width="50" Command="{Binding AddQuotationCommand}" Style="{StaticResource MetroCircleButtonStyle}">
                <Rectangle Width="25" Height="25" Fill="WhiteSmoke">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_save}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
